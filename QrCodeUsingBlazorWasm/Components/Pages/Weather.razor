@page "/weather"

<PageTitle>Weather</PageTitle>

<h1 class="text-3xl font-semibold mb-4">Weather</h1>

<p class="text-lg mb-4">This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em class="text-gray-500">Loading...</em></p>
}
else
{
    <table class="min-w-full table-auto border-collapse mt-4">
        <thead>
            <tr class="border-b">
                <th class="px-4 py-2 text-left font-medium">Date</th>
                <th class="px-4 py-2 text-left font-medium" aria-label="Temperature in Celsius">Temp. (C)</th>
                <th class="px-4 py-2 text-left font-medium" aria-label="Temperature in Fahrenheit">Temp. (F)</th>
                <th class="px-4 py-2 text-left font-medium">Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr class="border-b hover:bg-gray-100">
                    <td class="px-4 py-2">@forecast.Date.ToShortDateString()</td>
                    <td class="px-4 py-2">@forecast.TemperatureC</td>
                    <td class="px-4 py-2">@forecast.TemperatureF</td>
                    <td class="px-4 py-2">@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
